<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
	xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd">
	<munit:config name="test-suite.xml" />

	<configuration-properties doc:name="Configuration properties"
		file="mule.test.properties" />
	<configuration-properties doc:name="Configuration properties"
		file="common.properties" />
	<configuration-properties doc:name="Configuration properties"
		file="mule-artifact.properties" />

	<munit:before-test name="test-suiteBefore_Test"
		description="Before tests actions" doc:id="822ed1d9-be56-439d-b626-71274cf7166a">
		<set-variable value="#[uuid()[0 to 7]]" doc:name="Set Random Firstname"
			doc:id="9fea96c4-fb81-4497-a982-0cd7a9d32635" variableName="FirstName" />
		<salesforce:query doc:name="Query test User from Salesforce A"
			doc:id="b69d92a6-7c99-4a79-9dfc-a232bd95305a" config-ref="Salesforce_Sfdc_A_config"
			target="testUsersA">
			<salesforce:salesforce-query>SELECT Id, Email, FirstName, LastName,
				Username, Alias, TimeZoneSidKey, LocaleSidKey, EmailEncodingKey,
				ProfileId, LanguageLocaleKey, LastModifiedDate FROM User WHERE Email
				= ':email'</salesforce:salesforce-query>
			<salesforce:parameters><![CDATA[#[output application/java
---
{
	"email" : p('sfdc.test.user.email')
}]]]></salesforce:parameters>
		</salesforce:query>
		<salesforce:query doc:name="Query test User from Salesforce B"
			doc:id="ed233dbc-779e-4d50-95c2-9e0df00fc405" config-ref="Salesforce_Sfdc_B_config"
			target="testUsersB">
			<salesforce:salesforce-query>SELECT Id, Email, FirstName, LastName,
				Username, Alias, TimeZoneSidKey, LocaleSidKey, EmailEncodingKey,
				ProfileId, LanguageLocaleKey, LastModifiedDate FROM User WHERE Email
				= ':email'</salesforce:salesforce-query>
			<salesforce:parameters><![CDATA[#[output application/java
---
{
	"email" : p('sfdc.test.user.email')
}]]]></salesforce:parameters>
		</salesforce:query>
		<ee:transform doc:name="Preprare data for update test user A"
			doc:id="3ece40a4-d0e1-43d5-9d57-7d861384c8ea">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
[
	{
		FirstName: vars.FirstName, 
		Id: vars.testUsersA[0].Id
	}
]
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<salesforce:update type="User" doc:name="Update test user in Salesforce A" doc:id="ddd8475f-52c9-4579-b0bc-fc241bc1e8fc" config-ref="Salesforce_Sfdc_A_config"/>
		<munit-tools:mock-when doc:name="Mock email processor to avoid sending email" doc:id="326df949-9b8d-491a-b81a-876afe90b0d5" processor="email:send">
			<munit-tools:then-return />
		</munit-tools:mock-when>
	</munit:before-test>
	<munit:test name="test-suiteTest" description="MUnit Test" doc:id="f60526a8-e049-470c-91c6-3d72d9aa73de" >
		<munit:execution >
			<munit-tools:assert-that doc:name="Assert that there just one test user in Salesforce A" doc:id="a8fefff5-211e-4e3d-bb99-3cfc0f79324e" expression="#[sizeOf(vars.testUsersA)]" is="#[MunitTools::equalTo(1)]" message="There is not just one tested user in Salesforce A" />
			<munit-tools:assert-that doc:name="Assert that there just one test user in Salesforce B" doc:id="19462b0a-005d-4ec0-b97c-bf348cf5c182" expression="#[sizeOf(vars.testUsersB)]" is="#[MunitTools::equalTo(1)]" message="There is not just one tested user in Salesforce B"/>
			<salesforce:query doc:name="Query test User from Salesforce A" doc:id="bfbb9966-2a6a-4c34-805c-39866971dcba" config-ref="Salesforce_Sfdc_A_config">
				<salesforce:salesforce-query>SELECT Id, Email, FirstName, LastName, Username, Alias, TimeZoneSidKey, LocaleSidKey, EmailEncodingKey, ProfileId, LanguageLocaleKey, LastModifiedDate FROM User WHERE Email = ':email'</salesforce:salesforce-query>
				<salesforce:parameters><![CDATA[#[output application/java
---
{
	"email" : p('sfdc.test.user.email')
}]]]></salesforce:parameters>
			</salesforce:query>
			<flow-ref doc:name="call businessLogicFlow" doc:id="b3b6eb22-47ec-422e-9cbf-54838e3ffd98" name="businessLogicFlow"/>
			<scripting:execute engine="groovy" doc:name="Sleep for 10s until the processing is completed" doc:id="e7c279c6-60a7-4a66-88b1-004cf6fe51b2" >
				<scripting:code >sleep(10000)</scripting:code>
			</scripting:execute>
			<salesforce:query doc:name="Query test User from Salesforce B" doc:id="56127744-2b6d-4f8c-908d-f0697f52627b" config-ref="Salesforce_Sfdc_B_config" target="testUsersBChanged" >
				<salesforce:salesforce-query >SELECT Id, Email, FirstName, LastName, Username, Alias, TimeZoneSidKey, LocaleSidKey, EmailEncodingKey, ProfileId, LanguageLocaleKey, LastModifiedDate FROM User WHERE Email = ':email'</salesforce:salesforce-query>
				<salesforce:parameters ><![CDATA[#[output application/java
---
{
	"email" : p('sfdc.test.user.email')
}]]]></salesforce:parameters>
			</salesforce:query>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that FirstName is set to generated one" doc:id="bda138ae-846e-47c0-8305-5432ffec69dd" expression="#[vars.testUsersBChanged[0].FirstName]" is="#[MunitTools::equalTo(vars.FirstName)]"/>
		</munit:validation>
	</munit:test>
	<munit:after-test name="test-suiteAfter_Test" description="After tests actions" doc:id="5154e200-beeb-49e7-86cd-d3aa91fcbb51" >
		<ee:transform doc:name="Preprare data for revert test user A" doc:id="fb6b43d8-16a3-448e-a1f6-93919d22d416" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
[
	{
		FirstName: vars.testUsersA[0].FirstName, 
		Id: vars.testUsersA[0].Id
	}
]
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<salesforce:update type="User" doc:name="Revert test user in Salesforce A" doc:id="251d5474-f3c4-4776-9e95-96b87db966b9" config-ref="Salesforce_Sfdc_A_config" />
		<ee:transform doc:name="Preprare data for revert test user B" doc:id="548293c8-defa-4563-a3f0-ec4861fabe8d" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
[
	{
		FirstName: vars.testUsersB[0].FirstName, 
		Id: vars.testUsersB[0].Id
	}
]
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<salesforce:update doc:name="Revert test user in Salesforce B" doc:id="16f25294-92c4-4b3f-af00-f727db8a12e3" config-ref="Salesforce_Sfdc_B_config" type="User"/>
	</munit:after-test>


</mule>
